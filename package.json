{
  "name": "electrodb",
  "version": "3.0.2",
  "description": "A library to more easily create and interact with multiple entities and heretical relationships in dynamodb",
  "main": "index.js",
  "scripts": {
    "build": "sh buildbrowser.sh",
    "build:browser": "browserify playground/browser.js -o playground/bundle.js",
    "test": "./test.sh",
    "test:ci": "npm install && npm test",
    "test:run": "npm run test:types && npm run test:init && npm run test:unit",
    "test:init": "node ./test/init.js",
    "test:init:hard": "node ./test/init.js --recreate",
    "test:unit": "mocha -r ts-node/register ./test/**.spec.*",
    "test:types": "tsd",
    "test:format": "prettier -c src/**/*.js examples/**/*",
    "coverage": "npm run test:init:hard && nyc npm run test:unit && nyc report --reporter=text-lcov | coveralls",
    "coverage:local:coveralls": "npm run test:init:hard && nyc npm run test:unit && nyc report --reporter=text-lcov | coveralls",
    "coverage:local:html": "npm run test:init:hard && nyc npm run test:unit && nyc report --reporter=html",
    "ddb:start": "docker compose up -d dynamodb",
    "ddb:load": "docker compose exec electro npm run test:init:hard",
    "ddb:stop": "docker compose stop",
    "examples:load:library": "npm run ddb:start && npm run local:init && ts-node ./examples/library/load.ts",
    "examples:query:library": "npm run ddb:start && npm run local:init && ts-node ./examples/library/query.ts",
    "examples:load:taskmanager": "npm run ddb:start && npm run local:init && ts-node ./examples/taskManager/load.ts",
    "examples:query:taskmanager": "npm run ddb:start && npm run local:init && ts-node ./examples/taskManager/query.ts",
    "examples:load:versioncontrol": "npm run ddb:start && npm run local:init && ts-node ./examples/versionControl/load.ts",
    "examples:query:versioncontrol": "npm run ddb:start && npm run local:init && ts-node ./examples/versionControl/query.ts",
    "examples:provisiontable": "npm run ddb:start && npm run local:init && ts-node ./examples/provisionTable",
    "examples:locks": "npm run ddb:start && npm run local:init && ts-node ./examples/locks",
    "local:init": "LOCAL_DYNAMO_ENDPOINT='http://localhost:8000' npm run test:init",
    "local:init:hard": "LOCAL_DYNAMO_ENDPOINT='http://localhost:8000' npm run test:init:hard",
    "local:start": "npm run ddb:start && npm run local:init",
    "local:fresh": "npm run ddb:start && npm run local:init:hard",
    "local:stop": "npm run ddb:stop",
    "local:exec": "LOCAL_DYNAMO_ENDPOINT='http://localhost:8000' ts-node ./test/debug.ts",
    "local:debug": "npm run local:start && npm run local:exec",
    "format": "prettier -w src/**/*.js examples/**/* --log-level=error"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tywalch/electrodb.git"
  },
  "author": "Tyler W. Walch",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/tywalch/electrodb/issues"
  },
  "homepage": "https://github.com/tywalch/electrodb#readme",
  "devDependencies": {
    "@aws-sdk/client-dynamodb": "^3.395.0",
    "@faker-js/faker": "^8.0.2",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@types/chai": "^4.2.12",
    "@types/mocha": "^8.0.3",
    "@types/node": "^15.14.9",
    "@types/uuid": "^8.3.0",
    "aws-cdk-lib": "^2.100.0",
    "aws-sdk": "2.630.0",
    "browserify": "^17.0.0",
    "chai": "4.2.0",
    "coveralls": "^3.1.1",
    "istanbul": "0.4.5",
    "jest": "25.4.0",
    "mocha": "7.1.1",
    "mocha-lcov-reporter": "^1.3.0",
    "moment": "2.24.0",
    "nyc": "^15.1.0",
    "prettier": "^3.0.3",
    "prettier-plugin-astro": "^0.12.0",
    "source-map-support": "^0.5.19",
    "sst": "^2.28.0",
    "ts-node": "^10.9.1",
    "tsd": "^0.28.1",
    "typescript": "^5.2.2",
    "uuid": "7.0.1"
  },
  "keywords": [
    "electrodb",
    "dynamo",
    "dynamodb",
    "nosql",
    "single table design",
    "typescript",
    "aws"
  ],
  "tsd": {
    "directory": "test"
  },
  "dependencies": {
    "@aws-sdk/lib-dynamodb": "^3.654.0",
    "@aws-sdk/util-dynamodb": "^3.654.0",
    "jsonschema": "1.2.7"
  }
}
